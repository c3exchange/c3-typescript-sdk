import { LogicSigAccount } from "algosdk"
import { UserAddress } from "../interfaces"
import { IPackedInfo, packData } from "../utils"

export const proxyDataFormat: IPackedInfo = {
    server: { type: 'address' },
}

export const compiledProxyFormat: IPackedInfo = {
    chunk0: { type: 'fixed', valueHex: '0820070001024A484D6F260100312032031244310932031244311532031244311081061244310122124431052812442238102312448020' },
    data: { type: 'object', info: proxyDataFormat },
    chunk1: { type: 'fixed', valueHex},
}

export type SignatureValidator = {
    address: UserAddress,
    logicSig: LogicSigAccount
}

export function makeSignatureValidator(
    // TODO: This will always be an Algorand Address, we need a new type to specify Algorand Addresses
    address: UserAddress
): SignatureValidator {
    const data = {
        data: {
            server: address,
        },
    }
    const bytecode = packData(data, compiledProxyFormat, false)
    return {
        address,
        logicSig: new LogicSigAccount(bytecode)
    }
}